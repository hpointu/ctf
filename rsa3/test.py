def xgcd(b, a):
    x0, x1, y0, y1 = 1, 0, 0, 1
    while a != 0:
        q, b, a = b // a, a, b % a
        x0, x1 = x1, x0 - q * x1
        y0, y1 = y1, y0 - q * y1
    return b, x0, y0


def mulinv(b, n):
    g, x, _ = xgcd(b, n)
    if g == 1:
        return x % n


def phi(factors):
    product = 1
    for f in factors:
        product *= f-1
    return product

c = 3045117026258647974608265370829800422557640638008828165591070261841609828943053424188174355605156020699368052246856177754222378869150566200808643439088157190938199349748621498222446369917807941186670752379020858731631207657331757892142875874749808901179374923323910983481485543242107190519052056685733641
n = 5224141877640976910407684447817488499240269412697932892629759031830202318314960691951924417747555032334512897518860302572263090241849325226965687449677718307626545249766654002324895841057315502470683305124220879118192836562524578318742236329624241362976253492300104824907109613502774863559750223794871143
e = 65537


factors = (
    2185577491,
    2217195247,
    2231350787,
    2248526263,
    2348270693,
    2376586969,
    2506434179,
    2540594131,
    2614908251,
    2625107029,
    2751880399,
    2759366881,
    3060261767,
    3064076777,
    3218338559,
    3244625701,
    3250959511,
    3355128089,
    3469669657,
    3483126077,
    3483667853,
    3490463323,
    3525903401,
    3559405189,
    3704655127,
    3715170079,
    3751529653,
    3808760507,
    3933718699,
    4202578507,
    4247218169,
    4264819193,
)

d = mulinv(e, phi(factors))

m = pow(c, d, n)

plain = bytearray.fromhex(format(m, 'x'))
print(plain)
